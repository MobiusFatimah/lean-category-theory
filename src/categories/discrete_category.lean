-- Copyright (c) 2017 Scott Morrison. All rights reserved.
-- Released under Apache 2.0 license as described in the file LICENSE.
-- Authors: Stephen Morgan, Scott Morrison

import .category
import .functor
import tidy.its

namespace categories

universes u‚ÇÅ u‚ÇÇ 

open categories.functor

local attribute [applicable] category.identity -- This says that whenever there is a goal of the form C.Hom X X, we can safely complete it with the identity morphism. This isn't universally true.

definition discrete (Œ± : Type u‚ÇÅ) := Œ±

instance  DiscreteCategory (Œ± : Type (u‚ÇÅ+1)) : category (discrete Œ±) := {
  Hom            := Œª X Y, ulift (plift (X = Y)),
  identity       := ‚ôØ,
  compose        := ‚ôØ
}

instance EmptyCategory : category pempty := (by apply_instance : category (discrete pempty))
instance OneCategory : category punit := (by apply_instance : category (discrete punit))

definition EmptyFunctor (C : Type (u‚ÇÇ+1)) [category C] : pempty ‚Üù C := ‚ôØ

-- FIXME This is really horrible! Please help out. :-)
definition Functor.fromFunction {C : Type (u‚ÇÇ+1)} [category C] {I : Type (u‚ÇÅ+1)} (F : I ‚Üí C) : (discrete I) ‚Üù C := {
  onObjects     := F,
  onMorphisms   := Œª X Y f, begin cases f, cases f, rw f, exact ùüô (F Y) end,
  identities := begin tidy, end,
  functoriality:= begin tidy, cases f, cases f, induction f, cases g, cases g, induction g, tidy, end
}

end categories
